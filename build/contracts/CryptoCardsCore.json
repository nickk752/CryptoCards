{
  "contractName": "CryptoCardsCore",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_STARTING_PRICE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_AUCTION_DURATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCOO",
          "type": "address"
        }
      ],
      "name": "setCOO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cardIndexToApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cardId",
          "type": "uint256"
        },
        {
          "name": "_startingPrice",
          "type": "uint256"
        },
        {
          "name": "_endingPrice",
          "type": "uint256"
        },
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "createSaleAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_skills",
          "type": "uint128"
        }
      ],
      "name": "createGen0Auction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newContractAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setSaleAuctionAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cardIndexToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "name": "ownerTokens",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cooAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "saleAuction",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gen0CreatedCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "skills",
          "type": "uint128"
        }
      ],
      "name": "Spawn",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getCard",
      "outputs": [
        {
          "name": "skills",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x606060405260043610610175576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146101d357806306fdde031461022d578063095ea7b3146102bb5780630a0f8168146102fd5780630e583df01461035257806318160ddd1461037b57806319c2f201146103a457806323b872dd146103cd57806327d7874c1461042e5780632ba73c1514610467578063394baa0b146104a05780633d7d3f5a146105035780633f4ba83a14610541578063421182b7146105565780635c975abb1461058b5780635fd8c710146105b85780636352211e146105cd5780636af04a57146106305780636fbde40d1461068557806370a08231146106be57806378d0df501461070b5780638456cb591461076e5780638462151c146107835780639188d3121461081157806395d89b411461086c578063a9059cbb146108fa578063b047fb501461093c578063e6cbe35114610991578063f1ca9410146109e6575b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101d157600080fd5b005b34156101de57600080fd5b61021360048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019091905050610a0f565b604051808215151515815260200191505060405180910390f35b341561023857600080fd5b610240610d20565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610280578082015181840152602081019050610265565b50505050905090810190601f1680156102ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102c657600080fd5b6102fb600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610d59565b005b341561030857600080fd5b610310610e37565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561035d57600080fd5b610365610e5c565b6040518082815260200191505060405180910390f35b341561038657600080fd5b61038e610e67565b6040518082815260200191505060405180910390f35b34156103af57600080fd5b6103b7610e74565b6040518082815260200191505060405180910390f35b34156103d857600080fd5b61042c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e7b565b005b341561043957600080fd5b610465600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f48565b005b341561047257600080fd5b61049e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611022565b005b34156104ab57600080fd5b6104c160048080359060200190919050506110fd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561050e57600080fd5b61053f6004808035906020019091908035906020019091908035906020019091908035906020019091905050611130565b005b341561054c57600080fd5b610554611283565b005b341561056157600080fd5b61058960048080356fffffffffffffffffffffffffffffffff169060200190919050506113be565b005b341561059657600080fd5b61059e6115bc565b604051808215151515815260200191505060405180910390f35b34156105c357600080fd5b6105cb6115cf565b005b34156105d857600080fd5b6105ee60048080359060200190919050506116aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561063b57600080fd5b610643611723565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561069057600080fd5b6106bc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611749565b005b34156106c957600080fd5b6106f5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611880565b6040518082815260200191505060405180910390f35b341561071657600080fd5b61072c60048080359060200190919050506118c9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561077957600080fd5b6107816118fc565b005b341561078e57600080fd5b6107ba600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061198f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107fd5780820151818401526020810190506107e2565b505050509050019250505060405180910390f35b341561081c57600080fd5b6108326004808035906020019091905050611ac6565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561087757600080fd5b61087f611b0e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108bf5780820151818401526020810190506108a4565b50505050905090810190601f1680156108ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561090557600080fd5b61093a600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611b47565b005b341561094757600080fd5b61094f611c5b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561099c57600080fd5b6109a4611c81565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156109f157600080fd5b6109f9611ca7565b6040518082815260200191505060405180910390f35b600060405180807f737570706f727473496e74657266616365286279746573342900000000000000815250601901905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d19575060405180807f746f6b656e4d657461646174612875696e743235362c737472696e6729000000815250601d019050604051809103902060405180807f746f6b656e734f664f776e6572286164647265737329000000000000000000008152506016019050604051809103902060405180807f7472616e7366657246726f6d28616464726573732c616464726573732c75696e81526020017f74323536290000000000000000000000000000000000000000000000000000008152506025019050604051809103902060405180807f7472616e7366657228616464726573732c75696e7432353629000000000000008152506019019050604051809103902060405180807f617070726f766528616464726573732c75696e743235362900000000000000008152506018019050604051809103902060405180807f6f776e65724f662875696e7432353629000000000000000000000000000000008152506010019050604051809103902060405180807f62616c616e63654f6628616464726573732900000000000000000000000000008152506012019050604051809103902060405180807f746f74616c537570706c79282900000000000000000000000000000000000000815250600d019050604051809103902060405180807f73796d626f6c28290000000000000000000000000000000000000000000000008152506008019050604051809103902060405180807f6e616d6528290000000000000000000000000000000000000000000000000000815250600601905060405180910390201818181818181818187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6040805190810160405280600b81526020017f43727970746f436172647300000000000000000000000000000000000000000081525081565b600160149054906101000a900460ff16151515610d7557600080fd5b610d7f3382611cad565b1515610d8a57600080fd5b610d948183611d19565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b662386f26fc1000081565b6000600280549050905090565b6201518081565b600160149054906101000a900460ff16151515610e9757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610ed357600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f0e57600080fd5b610f183382611d6f565b1515610f2357600080fd5b610f2d8382611cad565b1515610f3857600080fd5b610f43838383611ddb565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fa357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610fdf57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561107d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156110b957600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1615151561114c57600080fd5b6111563385611cad565b151561116157600080fd5b61118d84600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611d19565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a85858585336040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b151561126957600080fd5b6102c65a03f1151561127a57600080fd5b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112de57600080fd5b600160149054906101000a900460ff1615156112f957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561135757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156113b457600080fd5b6113bc611fa7565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806114685750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561147357600080fd5b61147d823061203a565b90506114ab81600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611d19565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a826114f2612189565b600062015180306040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b151561159257600080fd5b6102c65a03f115156115a357600080fd5b5050506007600081548092919060010191905055505050565b600160149054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561162c57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff163190506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015156116a757600080fd5b50565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561171e57600080fd5b919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117a657600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166385b861886000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561181557600080fd5b6102c65a03f1151561182657600080fd5b50505060405180519050151561183b57600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561195757600080fd5b600160149054906101000a900460ff1615151561197357600080fd5b60018060146101000a81548160ff021916908315150217905550565b61199761228c565b60006119a161228c565b60008060006119af87611880565b945060008514156119e15760006040518059106119c95750595b90808252806020026020018201604052509550611abc565b846040518059106119ef5750595b90808252806020026020018201604052509350611a0a610e67565b925060009150600090505b8281111515611ab8578673ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611aab57808483815181101515611a9457fe5b906020019060200201818152505081806001019250505b8080600101915050611a15565b8395505b5050505050919050565b600080600283815481101515611ad857fe5b906000526020600020900190508060000160009054906101000a90046fffffffffffffffffffffffffffffffff16915050919050565b6040805190810160405280600281526020017f434300000000000000000000000000000000000000000000000000000000000081525081565b600160149054906101000a900460ff16151515611b6357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611b9f57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611bda57600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c3757600080fd5b611c413382611cad565b1515611c4c57600080fd5b611c57338383611ddb565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60008273ffffffffffffffffffffffffffffffffffffffff166005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b806005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff166005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515611f0357600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055505b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561200257600080fd5b600160149054906101000a900460ff16151561201d57600080fd5b6000600160146101000a81548160ff021916908315150217905550565b60006120446122a0565b6000602060405190810160405280866fffffffffffffffffffffffffffffffff16815250915060016002805480600101828161208091906122c6565b9160005260206000209001600085909190915060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050500390507f26a0debffe6884b69aadebb1a7c7f3cc644ba96e2ad70e3c6b9594f1e02645b484828460000151604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001935050505060405180910390a161217e60008583611ddb565b809250505092915050565b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eac9d94c6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561221c57600080fd5b6102c65a03f1151561222d57600080fd5b505050604051805190509150816fffffffffffffffffffffffffffffffff168214151561225957600080fd5b60028281151561226557fe5b0482019050662386f26fc1000081101561228457662386f26fc1000090505b809250505090565b602060405190810160405280600081525090565b60206040519081016040528060006fffffffffffffffffffffffffffffffff1681525090565b8154818355818115116122ed578183600052602060002091820191016122ec91906122f2565b5b505050565b61233191905b8082111561232d57600080820160006101000a8154906fffffffffffffffffffffffffffffffff0219169055506001016122f8565b5090565b905600a165627a7a72305820b91c54f8c1c623264bc858fbbf377472d95fdb9c0ab9559eee21dfc71f4c77560029",
  "sourceMap": "55:1873:7:-;;;454:5:0;433:26;;;;;;;;;;;;;;;;;;;;291:278:7;;;;;;;;370:4;361:6;;:13;;;;;;;;;;;;;;;;;;456:10;443;;:23;;;;;;;;;;;;;;;;;;552:10;539;;:23;;;;;;;;;;;;;;;;;;55:1873;;;;;;",
  "deployedSourceMap": "55:1873:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;837:11;;;;;;;;;;;815:34;;:10;:34;;;794:65;;;;;;;;55:1873;1278:323:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;218:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5048:358:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;269:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;134:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6724:86:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;195:54:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5863:738:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1332;;;;;;;;;;;;;;;;;;;;;;;;;;;;1644:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;830:737:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1490:223:7;;;;;;;;;;;;;;457:381:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:130:7;;;;;;;;;;;;;;6941:163:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;180:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:344:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:122:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1824:76:0;;;;;;;;;;;;;;7551:860:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;990:147:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;267:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3728:905:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;300:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1855:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;322:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1278:323:3;1349:4;426:38;;;;;;;;;;;;;;;;;;;1504:41;;;:12;:41;;;;1503:90;;;;989:42;;;;;;;;;;;;;;;;;;;935:35;;;;;;;;;;;;;;;;;;;866:50;;;;;;;;;;;;;;;;;;;;;;;;809:38;;;;;;;;;;;;;;;;;;;753:37;;;;;;;;;;;;;;;;;;;705:29;;;;;;;;;;;;;;;;;;;655:31;;;;;;;;;;;;;;;;;;;610:26;;;;;;;;;;;;;;;;;;;570:21;;;;;;;;;;;;;;;;;;;532:19;;;;;;;;;;;;;;;;;;;525:67;:112;:162;:210;:266;:323;:392;:446;:507;1551:41;;;:12;:41;;;;1503:90;1495:99;;1278:323;;;:::o;218:43::-;;;;;;;;;;;;;;;;;;;;:::o;5048:358::-;1583:6:0;;;;;;;;;;;1582:7;1574:16;;;;;;;;5191:27:3;5197:10;5209:8;5191:5;:27::i;:::-;5183:36;;;;;;;;5298:23;5307:8;5317:3;5298:8;:23::i;:::-;5364:35;5373:10;5385:3;5390:8;5364:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5048:358;;:::o;269:25:0:-;;;;;;;;;;;;;:::o;134:55:2:-;180:9;134:55;:::o;6724:86:3:-;6768:4;6791:5;:12;;;;6784:19;;6724:86;:::o;195:54:2:-;243:6;195:54;:::o;5863:738:3:-;1583:6:0;;;;;;;;;;;1582:7;1574:16;;;;;;;;6057:1:3;6042:17;;:3;:17;;;;6034:26;;;;;;;;6314:4;6299:20;;:3;:20;;;;6291:29;;;;;;;;6388:34;6401:10;6413:8;6388:12;:34::i;:::-;6380:43;;;;;;;;6441:22;6447:5;6454:8;6441:5;:22::i;:::-;6433:31;;;;;;;;6563;6573:5;6580:3;6585:8;6563:9;:31::i;:::-;5863:738;;;:::o;1063:125:0:-;573:10;;;;;;;;;;;559:24;;:10;:24;;;551:33;;;;;;;;1148:1;1129:21;;:7;:21;;;;1121:30;;;;;;;;1174:7;1161:10;;:20;;;;;;;;;;;;;;;;;;1063:125;:::o;1332:::-;573:10;;;;;;;;;;;559:24;;:10;:24;;;551:33;;;;;;;;1417:1;1398:21;;:7;:21;;;;1390:30;;;;;;;;1443:7;1430:10;;:20;;;;;;;;;;;;;;;;;;1332:125;:::o;1644:55:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;830:737:1:-;1583:6:0;;;;;;;;;;;1582:7;1574:16;;;;;;;;1208:26:1;1214:10;1226:7;1208:5;:26::i;:::-;1200:35;;;;;;;;1245:30;1254:7;1263:11;;;;;;;;;;;1245:8;:30::i;:::-;1403:11;;;;;;;;;;;:25;;;1442:7;1463:14;1491:12;1517:9;1540:10;1403:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;830:737;;;;:::o;1490:223:7:-;573:10:0;;;;;;;;;;;559:24;;:10;:24;;;551:33;;;;;;;;1724:6;;;;;;;;;;;1716:15;;;;;;;;1576:1:7;1553:25;;:11;;;;;;;;;;;:25;;;;1545:34;;;;;;;;1627:1;1597:32;;:18;;;;;;;;;;;:32;;;1589:41;;;;;;;;1683:15;:13;:15::i;:::-;1490:223::o;457:381:2:-;531:14;862:10:0;;;;;;;;;;;848:24;;:10;:24;;;:52;;;;890:10;;;;;;;;;;;876:24;;:10;:24;;;848:52;840:61;;;;;;;;548:35:2;560:7;577:4;548:11;:35::i;:::-;531:52;;593:29;602:6;610:11;;;;;;;;;;;593:8;:29::i;:::-;633:11;;;;;;;;;;;:25;;;672:6;692:23;:21;:23::i;:::-;729:1;243:6;787:4;633:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:16;;:18;;;;;;;;;;;;;457:381;;:::o;433:26:0:-;;;;;;;;;;;;;:::o;1796:130:7:-;1850:15;573:10:0;;;;;;;;;;;559:24;;:10;:24;;;551:33;;;;;;;;1868:4:7;:12;;;1850:30;;1891:10;;;;;;;;;;;:19;;:28;1911:7;1891:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:130;:::o;6941:163:3:-;6999:13;7032:16;:26;7049:8;7032:26;;;;;;;;;;;;;;;;;;;;;7024:34;;7094:1;7077:19;;:5;:19;;;;7069:28;;;;;;;;6941:163;;;:::o;180:33:7:-;;;;;;;;;;;;;:::o;373:344:1:-;449:34;573:10:0;;;;;;;;;;;559:24;;:10;:24;;;551:33;;;;;;;;503:8:1;449:63;;589:17;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:47;;;;;;;;693:17;679:11;;:31;;;;;;;;;;;;;;;;;;373:344;;:::o;3228:122:3:-;3284:13;3316:19;:27;3336:6;3316:27;;;;;;;;;;;;;;;;3309:34;;3228:122;;;:::o;1149:52:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;1824:76:0:-;573:10;;;;;;;;;;;559:24;;:10;:24;;;551:33;;;;;;;;1583:6;;;;;;;;;;;1582:7;1574:16;;;;;;;;1889:4;1880:6;;:13;;;;;;;;;;;;;;;;;;1824:76::o;7551:860:3:-;7613:21;;:::i;:::-;7646:18;7821:23;;:::i;:::-;7886:18;7934:19;8114:14;7667:17;7677:6;7667:9;:17::i;:::-;7646:38;;7713:1;7699:10;:15;7695:710;;;7788:1;7774:16;;;;;;;;;;;;;;;;;;;;;;;;7767:23;;;;7695:710;7861:10;7847:25;;;;;;;;;;;;;;;;;;;;;;;;7821:51;;7907:13;:11;:13::i;:::-;7886:34;;7956:1;7934:23;;8157:1;8148:10;;8143:225;8170:10;8160:6;:20;;8143:225;;;8242:6;8214:34;;:16;:24;8231:6;8214:24;;;;;;;;;;;;;;;;;;;;;:34;;;8210:144;;;8294:6;8272;8279:11;8272:19;;;;;;;;;;;;;;;;;:28;;;;;8322:13;;;;;;;8210:144;8182:8;;;;;;;8143:225;;;8388:6;8381:13;;7551:860;;;;;;;;;:::o;990:147:7:-;1043:14;1069:17;1089:5;1095:3;1089:10;;;;;;;;;;;;;;;;;;1069:30;;1119:4;:11;;;;;;;;;;;;1110:20;;990:147;;;;:::o;267:36:3:-;;;;;;;;;;;;;;;;;;;;:::o;3728:905::-;1583:6:0;;;;;;;;;;;1582:7;1574:16;;;;;;;;3902:1:3;3887:17;;:3;:17;;;;3879:26;;;;;;;;4159:4;4144:20;;:3;:20;;;;4136:29;;;;;;;;4400:11;;;;;;;;;;;4385:27;;:3;:27;;;;4377:36;;;;;;;;4475:27;4481:10;4493:8;4475:5;:27::i;:::-;4467:36;;;;;;;;4590;4600:10;4612:3;4617:8;4590:9;:36::i;:::-;3728:905;;:::o;300:25:0:-;;;;;;;;;;;;;:::o;1855:35:6:-;;;;;;;;;;;;;:::o;322:31:2:-;;;;:::o;1966:147:3:-;2041:4;2097:9;2064:42;;:19;:29;2084:8;2064:29;;;;;;;;;;;;;;;;;;;;;:42;;;2057:49;;1966:147;;;;:::o;2936:122::-;3042:9;3010:19;:29;3030:8;3010:29;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;2936:122;;:::o;2346:154::-;2428:4;2484:9;2451:42;;:19;:29;2471:8;2451:29;;;;;;;;;;;;;;;;;;;;;:42;;;2444:49;;2346:154;;;;:::o;1960:536:6:-;2110:19;:24;2130:3;2110:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;2206:3;2177:16;:26;2194:8;2177:26;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2357:1;2340:19;;:5;:19;;;;2336:78;;;2375:19;:26;2395:5;2375:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;2336:78;2459:30;2468:5;2475:3;2480:8;2459:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:536;;;:::o;1978:76:0:-;573:10;;;;;;;;;;;559:24;;:10;:24;;;551:33;;;;;;;;1724:6;;;;;;;;;;;1716:15;;;;;;;;2042:5;2033:6;;:14;;;;;;;;;;;;;;;;;;1978:76::o;2878:467:6:-;2949:7;2968:17;;:::i;:::-;3043;2988:45;;;;;;;;;3015:7;2988:45;;;;;2968:65;;3083:1;3063:5;:17;;;;;;;;;;;:::i;:::-;;;;;;;;;;3074:5;3063:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:21;3043:41;;3127:38;3133:6;3141:9;3152:5;:12;;;3127:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3280:31;3290:1;3293:6;3301:9;3280;:31::i;:::-;3329:9;3322:16;;2878:467;;;;;;:::o;956:499:2:-;1012:7;1031:16;1216:17;1050:11;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:53;;1194:8;1178:26;;1166:8;:38;1158:47;;;;;;;;1259:1;1248:8;:12;;;;;;;;1236:8;:25;1216:45;;180:9;1333;:31;1329:93;;;180:9;1380:31;;1329:93;1439:9;1432:16;;956:499;;;:::o;55:1873:7:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport \"./CardMinting.sol\";\n\ncontract CryptoCardsCore is CardMinting {\n    \n    // Set in case the core contract is broken and an upgrade is required\n    address public newContractAddress;\n\n    // @notice Creates the main CryptoKitties smart contract instance.\n    function CryptoCardsCore() public {\n        // Starts paused.\n        paused = true;\n\n        // the creator of the contract is the initial CEO\n        ceoAddress = msg.sender;\n\n        // the creator of the contract is also the intial COO\n        cooAddress = msg.sender;\n    }\n\n    // @notice No tipping!\n    // @dev Reject all Ether from being sent here, unless it's from one of the\n    //  two auction contracts. (Hopefully, we can prevent user accidents.)\n    function() external payable {\n        require(\n            msg.sender == address(saleAuction)\n        );\n    }\n\n    // @notice Returns all the relevant info about a specific card.\n    // @param _id The ID of the card of interest.\n    function getCard(uint256 _id) external view returns (uint128 skills) {\n        Card storage card = cards[_id];\n\n        skills = card.skills;\n    }\n\n    // @dev Override unpause so it requires all external contract addresses\n    //  to be set before contract can be unpaused. Also, we can't have\n    //  newContractAddress set either, because then the contract was upgraded.\n    // @notice This is public rather than external so we can call super.unpause\n    //  without using an expensive CALL.\n    function unpause() public onlyCEO whenPaused {\n        require(saleAuction != address(0));\n        require(newContractAddress == address(0));\n\n        // Actually unpause the contract.\n        super.unpause();        \n    }\n\n    // @dev Allows the CEO to capture the balance available to the contract.\n    function withdrawBalance() external onlyCEO {\n        uint256 balance = this.balance;\n\n        ceoAddress.transfer(balance);\n    }\n}",
  "sourcePath": "/home/quentin/CryptoCards/contracts/CryptoCardsCore.sol",
  "ast": {
    "absolutePath": "/home/quentin/CryptoCards/contracts/CryptoCardsCore.sol",
    "exportedSymbols": {
      "CryptoCardsCore": [
        1668
      ]
    },
    "id": 1669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1566,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "/home/quentin/CryptoCards/contracts/CardMinting.sol",
        "file": "./CardMinting.sol",
        "id": 1567,
        "nodeType": "ImportDirective",
        "scope": 1669,
        "sourceUnit": 291,
        "src": "26:27:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 1568,
              "name": "CardMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 290,
              "src": "83:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CardMinting_$290",
                "typeString": "contract CardMinting"
              }
            },
            "id": 1569,
            "nodeType": "InheritanceSpecifier",
            "src": "83:11:7"
          }
        ],
        "contractDependencies": [
          196,
          128,
          290,
          761,
          1564,
          1736
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1668,
        "linearizedBaseContracts": [
          1668,
          290,
          196,
          761,
          1736,
          1564,
          128
        ],
        "name": "CryptoCardsCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1571,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1668,
            "src": "180:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1570,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "180:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1588,
              "nodeType": "Block",
              "src": "325:244:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1574,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "361:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "370:4:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "361:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1577,
                  "nodeType": "ExpressionStatement",
                  "src": "361:13:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1578,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "443:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1579,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "456:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "456:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "443:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1582,
                  "nodeType": "ExpressionStatement",
                  "src": "443:23:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1583,
                      "name": "cooAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "539:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1584,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "552:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "552:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "539:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "539:23:7"
                }
              ]
            },
            "id": 1589,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "CryptoCardsCore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:0:7"
            },
            "scope": 1668,
            "src": "291:278:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1601,
              "nodeType": "Block",
              "src": "784:82:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1593,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2045,
                            "src": "815:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "815:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1596,
                              "name": "saleAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1484,
                              "src": "837:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SaleClockAuction_$2033",
                                "typeString": "contract SaleClockAuction"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SaleClockAuction_$2033",
                                "typeString": "contract SaleClockAuction"
                              }
                            ],
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "829:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "829:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "815:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "794:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:65:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "794:65:7"
                }
              ]
            },
            "id": 1602,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:2:7"
            },
            "payable": true,
            "returnParameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:0:7"
            },
            "scope": 1668,
            "src": "756:110:7",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1620,
              "nodeType": "Block",
              "src": "1059:78:7",
              "statements": [
                {
                  "assignments": [
                    1610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1610,
                      "name": "card",
                      "nodeType": "VariableDeclaration",
                      "scope": 1621,
                      "src": "1069:17:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1467_storage_ptr",
                        "typeString": "struct CryptoCardsBase.Card storage pointer"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1609,
                        "name": "Card",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1467,
                        "src": "1069:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1467_storage_ptr",
                          "typeString": "struct CryptoCardsBase.Card storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1614,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1611,
                      "name": "cards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1470,
                      "src": "1089:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Card_$1467_storage_$dyn_storage",
                        "typeString": "struct CryptoCardsBase.Card storage ref[] storage ref"
                      }
                    },
                    "id": 1613,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1612,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1604,
                      "src": "1095:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1089:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$1467_storage",
                      "typeString": "struct CryptoCardsBase.Card storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1069:30:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1615,
                      "name": "skills",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1607,
                      "src": "1110:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1616,
                        "name": "card",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1610,
                        "src": "1119:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1467_storage_ptr",
                          "typeString": "struct CryptoCardsBase.Card storage pointer"
                        }
                      },
                      "id": 1617,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "skills",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1466,
                      "src": "1119:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1110:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:20:7"
                }
              ]
            },
            "id": 1621,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1604,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1621,
                  "src": "1007:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1006:13:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1607,
                  "name": "skills",
                  "nodeType": "VariableDeclaration",
                  "scope": 1621,
                  "src": "1043:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1606,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1042:16:7"
            },
            "scope": 1668,
            "src": "990:147:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1649,
              "nodeType": "Block",
              "src": "1535:178:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1629,
                          "name": "saleAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1484,
                          "src": "1553:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SaleClockAuction_$2033",
                            "typeString": "contract SaleClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1576:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1568:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1568:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1553:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "1545:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1635,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:34:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1637,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1571,
                          "src": "1597:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1627:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1619:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1619:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1597:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "1589:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1643,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:41:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1644,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2079,
                        "src": "1683:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CryptoCardsCore_$1668",
                          "typeString": "contract super CryptoCardsCore"
                        }
                      },
                      "id": 1646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "1683:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1648,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:15:7"
                }
              ]
            },
            "id": 1650,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 1624,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1623,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19,
                  "src": "1516:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1516:7:7"
              },
              {
                "arguments": [],
                "id": 1626,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1625,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 103,
                  "src": "1524:10:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1524:10:7"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1506:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1535:0:7"
            },
            "scope": 1668,
            "src": "1490:223:7",
            "stateMutability": "nonpayable",
            "superFunction": 127,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "1840:86:7",
              "statements": [
                {
                  "assignments": [
                    1656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1656,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1667,
                      "src": "1850:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1655,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1850:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1659,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1657,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2078,
                      "src": "1868:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CryptoCardsCore_$1668",
                        "typeString": "contract CryptoCardsCore"
                      }
                    },
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1868:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1850:30:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1663,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1656,
                        "src": "1911:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1660,
                        "name": "ceoAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1891:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1891:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1665,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:28:7"
                }
              ]
            },
            "id": 1667,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 1653,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1652,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19,
                  "src": "1832:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1832:7:7"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1840:0:7"
            },
            "scope": 1668,
            "src": "1796:130:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1669,
        "src": "55:1873:7"
      }
    ],
    "src": "0:1928:7"
  },
  "legacyAST": {
    "absolutePath": "/home/quentin/CryptoCards/contracts/CryptoCardsCore.sol",
    "exportedSymbols": {
      "CryptoCardsCore": [
        1668
      ]
    },
    "id": 1669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1566,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "/home/quentin/CryptoCards/contracts/CardMinting.sol",
        "file": "./CardMinting.sol",
        "id": 1567,
        "nodeType": "ImportDirective",
        "scope": 1669,
        "sourceUnit": 291,
        "src": "26:27:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 1568,
              "name": "CardMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 290,
              "src": "83:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CardMinting_$290",
                "typeString": "contract CardMinting"
              }
            },
            "id": 1569,
            "nodeType": "InheritanceSpecifier",
            "src": "83:11:7"
          }
        ],
        "contractDependencies": [
          196,
          128,
          290,
          761,
          1564,
          1736
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1668,
        "linearizedBaseContracts": [
          1668,
          290,
          196,
          761,
          1736,
          1564,
          128
        ],
        "name": "CryptoCardsCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1571,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1668,
            "src": "180:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1570,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "180:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1588,
              "nodeType": "Block",
              "src": "325:244:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1574,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "361:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "370:4:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "361:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1577,
                  "nodeType": "ExpressionStatement",
                  "src": "361:13:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1578,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "443:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1579,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "456:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "456:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "443:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1582,
                  "nodeType": "ExpressionStatement",
                  "src": "443:23:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1583,
                      "name": "cooAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "539:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1584,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "552:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "552:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "539:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "539:23:7"
                }
              ]
            },
            "id": 1589,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "CryptoCardsCore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:0:7"
            },
            "scope": 1668,
            "src": "291:278:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1601,
              "nodeType": "Block",
              "src": "784:82:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1593,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2045,
                            "src": "815:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "815:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1596,
                              "name": "saleAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1484,
                              "src": "837:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SaleClockAuction_$2033",
                                "typeString": "contract SaleClockAuction"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SaleClockAuction_$2033",
                                "typeString": "contract SaleClockAuction"
                              }
                            ],
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "829:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "829:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "815:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "794:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:65:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "794:65:7"
                }
              ]
            },
            "id": 1602,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:2:7"
            },
            "payable": true,
            "returnParameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:0:7"
            },
            "scope": 1668,
            "src": "756:110:7",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1620,
              "nodeType": "Block",
              "src": "1059:78:7",
              "statements": [
                {
                  "assignments": [
                    1610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1610,
                      "name": "card",
                      "nodeType": "VariableDeclaration",
                      "scope": 1621,
                      "src": "1069:17:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1467_storage_ptr",
                        "typeString": "struct CryptoCardsBase.Card storage pointer"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1609,
                        "name": "Card",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1467,
                        "src": "1069:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1467_storage_ptr",
                          "typeString": "struct CryptoCardsBase.Card storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1614,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1611,
                      "name": "cards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1470,
                      "src": "1089:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Card_$1467_storage_$dyn_storage",
                        "typeString": "struct CryptoCardsBase.Card storage ref[] storage ref"
                      }
                    },
                    "id": 1613,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1612,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1604,
                      "src": "1095:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1089:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$1467_storage",
                      "typeString": "struct CryptoCardsBase.Card storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1069:30:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1615,
                      "name": "skills",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1607,
                      "src": "1110:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1616,
                        "name": "card",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1610,
                        "src": "1119:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1467_storage_ptr",
                          "typeString": "struct CryptoCardsBase.Card storage pointer"
                        }
                      },
                      "id": 1617,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "skills",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1466,
                      "src": "1119:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1110:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:20:7"
                }
              ]
            },
            "id": 1621,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1604,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1621,
                  "src": "1007:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1006:13:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1607,
                  "name": "skills",
                  "nodeType": "VariableDeclaration",
                  "scope": 1621,
                  "src": "1043:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1606,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1042:16:7"
            },
            "scope": 1668,
            "src": "990:147:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1649,
              "nodeType": "Block",
              "src": "1535:178:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1629,
                          "name": "saleAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1484,
                          "src": "1553:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SaleClockAuction_$2033",
                            "typeString": "contract SaleClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1576:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1568:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1568:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1553:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "1545:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1635,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:34:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1637,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1571,
                          "src": "1597:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1627:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1619:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1619:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1597:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "1589:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1643,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:41:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1644,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2079,
                        "src": "1683:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CryptoCardsCore_$1668",
                          "typeString": "contract super CryptoCardsCore"
                        }
                      },
                      "id": 1646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "1683:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1648,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:15:7"
                }
              ]
            },
            "id": 1650,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 1624,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1623,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19,
                  "src": "1516:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1516:7:7"
              },
              {
                "arguments": [],
                "id": 1626,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1625,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 103,
                  "src": "1524:10:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1524:10:7"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1506:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1535:0:7"
            },
            "scope": 1668,
            "src": "1490:223:7",
            "stateMutability": "nonpayable",
            "superFunction": 127,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "1840:86:7",
              "statements": [
                {
                  "assignments": [
                    1656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1656,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1667,
                      "src": "1850:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1655,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1850:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1659,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1657,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2078,
                      "src": "1868:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CryptoCardsCore_$1668",
                        "typeString": "contract CryptoCardsCore"
                      }
                    },
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1868:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1850:30:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1663,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1656,
                        "src": "1911:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1660,
                        "name": "ceoAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1891:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1891:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1665,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:28:7"
                }
              ]
            },
            "id": 1667,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 1653,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1652,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19,
                  "src": "1832:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1832:7:7"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1840:0:7"
            },
            "scope": 1668,
            "src": "1796:130:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1669,
        "src": "55:1873:7"
      }
    ],
    "src": "0:1928:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-04T01:58:05.070Z"
}